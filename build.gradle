plugins {
    id 'fabric-loom' version '1.5.+'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "Gitea"
        url = uri("https://git.ferenyr.fr/api/packages/VoidxelIndustries/maven")

        credentials(HttpHeaderCredentials) {
            name = "Authorization"
            value = "token ${gitea_token}"
        }

        authentication {
            header(HttpHeaderAuthentication)
        }
    }

    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven {
        name = 'Roughly Enough Items'
        url = 'https://maven.shedaniel.me/'
    }
    maven {
        name = 'ModMenu & EMI'
        url = 'https://maven.terraformersmc.com/'
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }

    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }

    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.voxelindustry:SteamLayer:${project.steamlayer_version}"
    //modImplementation "net.voxelindustry:biggerstructures:1.0.0"
    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.20.1:4.4.4'

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modImplementation "dev.emi:emi-fabric:${project.emi_version}"
    modImplementation "maven.modrinth:iris:1.6.11+1.20.1"

    modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:v3.3.9-mc1.20.1")
    modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:v3.3.9-mc1.20.1")
    modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:build:v3.3.9-mc1.20.1")

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.8.2')
    testImplementation('org.mockito:mockito-core:4.6.1')
    testImplementation('org.mockito:mockito-junit-jupiter:4.6.1')
    testImplementation('org.assertj:assertj-core:3.23.1')

    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.8.2')
}

loom {
    accessWidenerPath.set(file("src/main/resources/voidheart.accesswidener"))
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
        }
    }

    repositories {
        mavenLocal()
    }
}

jar {
    from "LICENSE"
}

fabricApi {
    configureDataGeneration()
}

processResources {
    inputs.properties "version": project.version, "description": project.description

    filesMatching(["fabric.mod.json", "pack.mcmeta"]) {
        expand(
                "version": project.version,
                "description": project.description,
                "repoOwner": project.repoOwner,
                "repoName": project.repoName,
                "id": project.modId,
                "minecraftVersionLimit": project.minecraftVersionLimit,
                "loaderVersionLimit": project.loaderVersionLimit
        )
    }
}